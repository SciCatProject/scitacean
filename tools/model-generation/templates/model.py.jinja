{{ banner }}
# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2023 SciCat Project (https://github.com/SciCatProject/scitacean)
"""Pydantic models for encoding data for communication with SciCat."""

from __future__ import annotations
from datetime import datetime
from typing import Any, Dict, List, Optional

import pydantic

from ._base_model import (
    BaseModel,
    DatasetType,
    validate_emails,
    validate_orcids,
    validate_size
)
from .filesystem import RemotePath
from .pid import PID


{%  for name, model in models.items() -%}
class {{ name }}(BaseModel):
{%- for field in model.fields.values()|sort(attribute="required,name") %}
    {{ field.name }}: {% if field.required %}{{ field.type }}{% else %}Optional[{{ field.type }}]{% endif %}
{%- endfor %}
{%- for validation in ("emails", "size", "orcids") %}
{%- set fields = model.fields.values()|selectattr("validation", "eq", validation)|list -%}
{% if fields %}

    @pydantic.validator({{ fields|map("attr", "name")|map("quote")|join(", ") }})
    def _validate_{{ validation }}(cls, value: Any) -> Any:
        return validate_{{ validation }}(value)
{%- endif %}
{%- endfor %}


{% endfor -%}
