[tox]
envlist = py{39,310,311,312}-full
isolated_build = true

[testenv]
deps = -r requirements/test.txt
commands =
    full: python -m pytest --backend-tests --sftp-tests
    !full: python -m pytest

[testenv:pydantic1]
envlist = py{311}-full
deps = -r requirements-pydantic1/test.txt
commands =
    full: python -m pytest --backend-tests --sftp-tests
    !full: python -m pytest

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python3.11
deps = -r requirements/docs.txt
allowlist_externals = find
commands = python -m sphinx -v -b html -d {toxworkdir}/docs_doctrees docs html
           python -m sphinx -v -b doctest -d {toxworkdir}/docs_doctrees docs html
           python -m sphinx -v -b linkcheck -d {toxworkdir}/docs_doctrees docs html
           find html -type f -name "*.ipynb" -not -path "html/_sources/*" -delete

[testenv:static]
description = Code formatting and static analysis
skip_install = true
deps = -r requirements/static.txt
allowlist_externals = sh
# The first run of pre-commit may reformat files. If this happens, it returns 1 but this
# should not fail the job. So just run again if it fails. A second failure means that
# either the different formatters can't agree on a format or that static analysis failed.
commands = sh -c 'pre-commit run -a || (echo "" && pre-commit run -a)'

[testenv:mypy]
description = Type checking (mypy)
deps = -r requirements/mypy.txt
commands = python -m mypy .

[testenv:deps]
description = Update dependencies by running pip-compile-multi
deps = pip-compile-multi
skip_install = true
commands = pip-compile-multi -d requirements
           pip-compile-multi -d requirements-pydantic1

[testenv:prepare-release]
description = Run before a release. Pass the release version as a positional argument.
skip_install = true
deps =
allowlist_externals = sh
commands =
  sh -c 'git grep -rl RELEASE_PLACEHOLDER docs/ src/scitacean | xargs sed -i "s/RELEASE_PLACEHOLDER/{posargs}/g"'

[testenv:check-release]
description = Check if a release can be made.
skip_install = true
deps =
allowlist_externals = sh
commands =
  sh -c '! git grep -rl RELEASE_PLACEHOLDER docs/ src/scitacean'
